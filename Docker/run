#! /bin/bash
# Run autoQA gear

# Configure the ENV
export LD_LIBRARY_PATH=/opt/mcr/v97/runtime/glnxa64:/opt/mcr/v97/bin/glnxa64:/opt/mcr/v97/sys/os/glnxa64:$LD_LIBRARY_PATH

###############################################################################
# Configure paths
FLYWHEEL_BASE=/flywheel/v0
OUTPUT_DIR=$FLYWHEEL_BASE/output
INPUT_DIR=$FLYWHEEL_BASE/input
CONFIG_FILE=$FLYWHEEL_BASE/config.json
MANIFEST_FILE=$FLYWHEEL_BASE/manifest.json

###############################################################################
# show config.json
echo -e "=== cat config.json ==="
cat $FLYWHEEL_BASE/config.json

###############################################################################
# Run batchQA.py
echo -e "=== Starting batchQA.py ... ==="
python3 batchQA.py
echo -e "=== batchQA.py Done! ... ==="

# unzip
# ZIP_FILE=$(cat config.json | jq -r '.inputs.input_zip.location.path')
# unzip -l $ZIP_FILE | grep -E '(/loc/){1}.*[0-9]{2,}(.dcm)' \
#   | awk '{print $4}' > /tmp/qa_loc_list.txt
# unzip -l $ZIP_FILE | grep -E '(/T1/){1}.*[0-9]{2,}(.dcm)' \
#   | awk '{print $4}' > /tmp/qa_T1_list.txt
# unzip -oq $ZIP_FILE -d /tmp/
# if [[ $? != 0 ]]; then
#   echo -e "Problem encountered during unzip!"
#   exit 1
# fi

# show loc and T1 files
# echo -e "=== cat qa_loc_list.txt ==="
# cat /tmp/qa_loc_list.txt
# echo -e "=== cat qa_T1_list.txt ==="
# cat /tmp/qa_T1_list.txt

###############################################################################
echo -e "=== Starting autoQA... ==="
# # Run autoQA
# $FLYWHEEL_BASE/autoQA
# # Check status code and die
# if [[ $? != 0 ]]; then
#   echo -e "Problem encountered during autoQA!"
#   exit 1
# fi
echo -e "=== Done! ==="

###############################################################################
# Run saveQA.py
# python3 saveQA.py

# cp /tmp/qa_result.txt $OUTPUT_DIR/.
# chmod -R 777 $OUTPUT_DIR

# show /flywheel/v0 tree
echo -e "=== tree /flywheel/v0 ==="
tree /flywheel/v0

exit 0